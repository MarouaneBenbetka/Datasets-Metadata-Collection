tx_name,Task Name,tx_difficulty,total_correctness,total_compute,total_robustness,total_memtotal,made_submission,compile_success,score_percentage,Time spent,Remarks on Score,id_task_session,js_comments,id_infra_instan,nu_pgmr_comment_flux_all,nu_pgmr_cyclo_flux_all,nu_pgmr_filesize_flux_all,nu_pgmr_nom_flux_all,nu_pgmr_dac_flux_all,nu_pgmr_fanout_flux_all,nu_loc_flux_source_all,nu_loc_added_source_all,nu_ce_models_units_all,nu_aberrant_ce_units_all,nu_ce_hours_all,nu_aberrant_ce_all,loc_submit,cyclo_submit,nom_submit,dac_submit,fanout_submit,ce_units_submit,aberrant_ce_units_submit,id_test_session,tx_file_type,correctness_norm,compute_norm,robustness_norm,memtotal_norm,task_score,avg_bce
0,15,intermediate,0,0,0,0,True,True,70.7,0.95,FAILED,3837,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""nop""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":"".""},{""question"":""Describe why a builder interface is appropriate."",""answer"":"".""}]",837384,0,10,1622,8,2,2,55,44,70.67056659086927,3.3603286788694304,3.982103419602944,0.1893458191807489,42,8,6,2,2,6.541836768847178,0.0296702964500191,0,java,0.0,0,0.0,0,0.0,3.624516342412452
1,1,easy,2,0,0,0,True,True,68.8,0.0,FAILED,3398,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""test""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""test""}]",805758,0,0,182,0,0,0,2,2,8.274675626355489,0.0,0.4662565435278765,0.0,10,2,2,0,0,8.274675626355489,0.0,3511,java,0.0,0,0.0,0,0.0,0.8999421906693712
2,12,easy,8,0,0,0,True,True,69.19999999999999,1.0,FAILED,3500,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""3rd point to calculate percintile was not very clear""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""1st was to calculate minimum, so pick up th mini from list. same mean calcluated as avg as per example.""}]",813135,0,10,93,10,3,3,111,100,176.1191232417409,1.5142117246275109,9.923856518351744,0.0853219094952202,16,2,2,1,1,16.994948088507382,0.2518846479893286,4427,java,3.125,0,0.0,0,0.390625,1.6656433378196498
2,3,intermediate,5,0,0,0,True,True,66.90000000000002,0.8,FAILED,3499,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""Tried to use bytes instead of long as we are using bytestreams for both i/o operations, but without debugging its difficult to find out the cause""},{""question"":""Describe the faults you found in words."",""answer"":""Issue is with streams only we are passing long numbers to byte stream even though we are converting but size of byte stream is smaller to hold the values thats why when size is increasing its failing and working for small input""}]",813134,4,40,172,24,11,19,170,162,220.07192242848225,11.373190130040452,12.400482932795374,0.6408498119283507,39,10,6,3,5,27.507695261238737,1.2079632053352551,4427,java,4.0,0,0.0,0,0.8,1.6656433378196498
2,15,intermediate,0,0,0,0,True,False,67.60000000000001,1.0,0,3498,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""If i had more time, i wolud iterate the string find out the positon of wildcart, and would have create a new object where i will be putting value of wildcart and in end would have create a newlist of string""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""By spiliting the string,  by string tokens we can do that""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""not sure on that""}]",813133,13,24,2118,10,0,0,841,777,874.9605428342627,16.702945044627356,49.301760799638565,0.9411676994852936,20,0,0,0,0,13.84130742932674,0.0,4427,java,0.0,0,0.0,0,0.0,1.6656433378196498
3,1,easy,0,0,0,0,True,True,63.2,1.0,FAILED,3411,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Yes""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Not enough time to do work""}]",807267,0,6,186,4,0,2,250,227,381.6397880713684,0.4676492463049715,21.504413767242823,0.0263508240094734,13,3,2,0,1,13.872810242519288,0.1232694527037887,4183,java,0.0,0,0.0,0,0.0,1.8562937048503607
3,15,intermediate,0,0,0,0,True,False,76.7,0.95,0,3412,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Yes ,  could not think of better option in limited time""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""We can add a or condition along with : for pattern matching""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""To create provide an option to create an""}]",807268,0,57,708,43,2,4,535,492,762.0101044331401,5.551943855109477,42.93729609106109,0.3128376589771313,28,7,5,0,0,14.69264055843344,0.2782080709392986,4183,java,0.0,0,0.0,0,0.0,1.8562937048503607
4,1,easy,2,0,0,0,True,True,63.9,0.8,ACCEPTABLE,3678,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""tested the input value""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""will work for any value which can be auto-boxed to double""}]",834097,0,5,117,4,0,2,24,13,121.00119393986432,2.351792083943516,6.81810393502954,0.1325173937529544,10,3,2,0,0,8.088353297018273,0.1406647456027702,4545,java,37.5,0,0.0,0,18.75,1.3342956852791878
4,8,easy,1,1,0,1,True,True,69.89999999999999,1.0,FAILED,3679,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""added short-circuit \u0026\u0026 operator""}]",834098,0,68,125,30,5,10,32,16,239.1165359920118,2.4806169663010937,13.473597589359429,0.1397763422701768,51,12,6,1,2,22.04524599534349,0.3999452856867109,4545,java,100.0,0,0.0,0,33.333333333333336,1.3342956852791878
4,15,intermediate,0,0,0,0,True,False,69.8,1.0,0,3677,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""faced technical issue while taking this question and got submitted""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834096,0,29,999,29,4,6,139,74,783.2449202906598,5.267923596406402,44.13382297516556,0.2968338528952348,18,4,4,1,1,19.04260078791973,0.3684905040973296,4545,java,0.0,0,0.0,0,0.0,1.3342956852791878
5,7,easy,1,1,0,0,True,True,67.80000000000001,1.0,FAILED,3470,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""change the loop from while to do while loop""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""use var type instead of  complex""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""change variable declaration  to var""}]",812399,0,8,310,0,0,0,112,56,380.5628515613817,4.246258286484583,21.443731183729067,0.2392656583754101,50,11,6,0,1,8.009189347486204,0.4658560192293085,4266,cs,100.0,0,0.0,0,50.0,1.3980957809030348
5,10,easy,6,0,0,0,True,True,66.10000000000001,0.6666666666666666,PASSED,3472,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""cross  verified the output""}]",812401,0,11,593,2,0,0,67,42,254.2779408587187,5.973619692453522,14.327903491775931,0.3365980004439366,33,8,3,0,1,9.18640583124165,0.4017669395269799,4266,cs,16.666666666666668,0,0.0,0,2.7777777777777786,1.3980957809030348
5,2,intermediate,0,0,0,0,True,True,67.80000000000001,1.0,FAILED,3471,"[{""question"":""the classes you used in the standard library and why"",""answer"":""timezone""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""Google.com""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""we already worked on timezone.""}]",812400,8,1,964,0,0,0,73,40,275.34923608924555,3.864574889267267,15.515216412000706,0.217758787345723,16,3,2,0,1,6.469069134708277,0.0,4266,cs,0.0,0,0.0,0,0.0,1.3980957809030348
6,8,easy,1,1,0,1,True,True,78.4,0.95,FAILED,3826,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""Looping""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""choosing correct datatype for the value""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""analyze the datatypes \u0026 iteration""}]",837072,0,44,65,24,4,11,30,15,190.36831812934784,1.3363941845988558,10.726761750695813,0.075302351589129,51,11,6,1,2,11.624121625163331,0.1055865902332361,4733,java,100.0,0,0.0,0,33.333333333333336,2.5944298701298703
6,1,easy,2,0,0,0,True,True,82.0,0.4,ACCEPTABLE,3827,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""dry run""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",837073,0,6,147,4,0,0,24,14,139.67769099522863,0.9829715435375892,7.870476179629309,0.0553879009850637,12,3,2,0,0,14.910871259866454,0.2823403126710656,4733,java,37.5,0,0.0,0,18.75,2.5944298701298703
7,1,easy,2,0,0,0,True,True,78.7,0.7,ACCEPTABLE,3174,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""By matching the result manually, that is if the mean of 2,2 is 2.0 ? It has matched.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""1.NULL\n2.Empty array\n3.Array which has some element""}]",731358,0,13,742,4,0,0,30,18,50.893662832979786,2.349497453550743,2.8677261069180746,0.1323880972724736,14,5,2,0,0,13.983124199410527,0.489518394417824,2723,java,37.5,0,0.0,0,18.75,3.2848484076433127
8,1,easy,2,0,0,0,True,True,46.40000000000001,0.4,FAILED,2874,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""eewqewqe""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""wewqe""}]",645596,0,1,11,0,0,0,1,1,6.324320274899181,0.0,0.3563590700940281,0.0,0,1,0,0,0,4.974925401076961,0.0,2029,py,0.0,0,0.0,0,0.0,0.6867670634920635
8,1,easy,2,0,0,0,True,True,62.2,0.0,ACCEPTABLE,2943,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""wjsk""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""sk""}]",645027,0,3,295,2,0,0,13,13,20.337491006511087,0.1203708802270767,1.1459649524535642,0.006782587389568,13,3,2,0,0,20.337491006511087,0.1203708802270767,2339,js,37.5,0,0.0,0,18.75,0.6867670634920635
9,1,easy,0,0,0,0,True,False,59.4,0.8,0,3842,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I will add all the array elements and divided by the array size to calculate the average""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""yes array size if it zero w""}]",837389,0,10,43,10,0,0,23,11,133.65565300688291,2.188724089861314,7.531149933595381,0.1233289345656691,7,2,2,0,0,9.365958738019437,0.683547749226785,0,java,0.0,0,0.0,0,0.0,0.4453037914691943
10,8,easy,1,1,0,1,True,True,69.3,1.0,FAILED,3838,"[{""question"":""If you had more time, describe the additional steps you would take to further optimise the code or explain why this is not possible."",""answer"":""Understand and use java8""},{""question"":""Outline why your solution runs faster than the original version."",""answer"":""it didnt""},{""question"":""Describe in words the steps you took to optimise the code."",""answer"":""""}]",837385,10,42,804,20,4,7,52,26,259.4620902320596,8.775953223782803,14.620016884142313,0.4945022380394522,51,11,6,1,2,6.147229660784992,0.1850780302973029,0,java,100.0,0,0.0,0,33.333333333333336,0.99800353200883
10,1,easy,2,0,0,0,True,True,73.0,0.9,ACCEPTABLE,3839,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""used calculator to calculate it""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""no problematic inputs given""}]",837386,0,6,230,4,0,0,34,21,185.3585615678089,0.7718500612959066,10.444474941668588,0.0434917521788241,16,3,2,0,0,11.036407593074076,0.0,0,java,37.5,0,0.0,0,18.75,0.99800353200883
10,15,intermediate,0,0,0,0,True,False,69.0,0.95,0,3840,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Code could have been completed""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""will first check for all the (.) and replace it with ascii and then form the word again and match with builder.""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""easily built""}]",837387,3,27,967,12,0,0,88,52,497.16805295627233,6.750249624543763,28.014132322667717,0.3803590859641158,25,0,0,0,0,12.391031244252437,0.0,0,java,0.0,0,0.0,0,0.0,0.99800353200883
11,1,easy,2,0,0,0,True,True,65.40000000000002,1.0,ACCEPTABLE,3506,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""I made a little bit of defensive programming. I can\u0027t add ArgumentException in order to check whether the array is null.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""if the array would be empty, probable it can raise a DividedByZeroException.""}]",813141,0,3,488,0,0,2,55,30,223.4329422129253,2.337585223684308,12.589867693985529,0.1317168739672913,13,3,2,0,0,0.5849814746964918,0.0,4363,cs,37.5,0,0.0,0,18.75,3.129143643512452
11,15,intermediate,0,0,0,0,True,False,68.10000000000001,0.95,0,3505,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Probably I will implemented the miss logic""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""add a property called wildcard ans use it in the algorithm""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""In order to add words and preserve the visibility of them.""}]",813140,0,9,1230,8,0,6,176,98,658.9970399603801,13.576885800433145,37.13277666962272,0.7650223562867076,30,7,6,0,2,5.555332014367954,0.5099572502218015,4363,cs,0.0,0,0.0,0,0.0,3.129143643512452
11,3,intermediate,5,0,0,0,True,True,67.40000000000002,1.0,FAILED,3504,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""i would be split the logic in methods applying Single responsibility principle.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""I didn\u0027t fixes. I don\u0027t very familiarized with this kind of algorithms""},{""question"":""Describe the faults you found in words."",""answer"":""The code is very unreadable, becuse all logic is""}]",813139,2,0,663,0,0,2,49,27,195.9493953451128,2.690890268999784,11.041240999102412,0.1516246983556061,52,11,7,0,2,1.7442635944060128,0.0,4363,cs,8.0,0,0.0,0,1.6,3.129143643512452
12,1,easy,2,0,0,0,True,True,69.69999999999999,0.55,ACCEPTABLE,3417,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""mean can be calculated by adding the given two number and then dividing the answer by two""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",808026,0,4,128,2,0,0,23,19,53.603340528612144,0.5767542786733362,3.0204094281126945,0.0324986100461299,12,3,2,0,0,14.669729228459133,0.2777742403497966,4144,java,37.5,0,0.0,0,18.75,1.4892453738910012
13,1,easy,0,0,0,0,True,False,54.2,1.0,0,3775,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""here i faced to uysed both Sum and avaerage functionality to be used""}]",834368,0,2,307,1,0,0,56,33,205.50792568488384,1.5782805637729331,11.57983943107393,0.0889320226690396,18,4,3,0,0,6.169103101756537,0.0,4477,cs,0.0,0,0.0,0,0.0,2.00236987654321
13,3,intermediate,5,0,0,0,True,True,69.39999999999999,0.95,FAILED,3773,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Added different testcase values""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",834366,0,0,69,0,0,0,18,10,71.09191513792318,0.0688071881485817,4.005845319109449,0.0038771068697662,49,11,7,0,2,7.738284101400622,0.0,4477,cs,4.0,0,0.0,0,0.8,2.00236987654321
13,15,intermediate,0,0,0,0,True,True,57.49999999999999,1.0,FAILED,3774,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""BUilder interface is the right one to matching the appropriate value from the list""}]",834367,0,0,4,0,0,0,0,0,1.7205273369507652,0.0,0.0969472599767891,0.0,10,2,2,0,0,1.1333556424303173,0.0,4477,cs,0.0,0,0.0,0,0.0,2.00236987654321
14,12,easy,0,0,0,0,True,False,70.89999999999998,0.9333333333333332,0,3385,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""..""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""..""}]",779511,0,2,658,1,0,2,62,38,215.08521815870685,0.4308850947231488,12.119495060713035,0.0242792592719169,31,4,3,0,1,5.792149529435878,0.0,3340,cs,0.0,0,0.0,0,0.0,0.4318592082616179
14,3,intermediate,5,0,0,0,True,True,70.39999999999998,0.95,FAILED,3383,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":"".""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":"".""},{""question"":""Describe the faults you found in words."",""answer"":"".""}]",779510,2,0,119,0,0,0,6,4,37.417001081589646,0.8150512263032551,2.108351116255746,0.0459260259536833,49,11,7,0,2,6.784742590366055,0.0,3340,cs,4.0,0,0.0,0,0.8,0.4318592082616179
15,1,easy,2,0,0,0,True,True,72.89999999999998,1.0,ACCEPTABLE,3643,0,834101,0,10,182,6,0,0,32,20,180.5089818531534,0.4686401655329031,10.171213683170873,0.0264066597418928,16,4,2,0,0,9.343092329351167,0.1760985846210661,4539,java,37.5,0,0.0,0,18.75,1.4802463095238094
16,14,difficult,0,0,0,0,True,False,68.5,0.9,0,3744,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""Because Change should be tracked of all of the money present in machine""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""Return -1 and show appropirate  message to user on Vending machine""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Hashset""}]",834282,0,17,489,16,0,0,58,33,252.0838750457323,6.68114612033562,14.204273564945032,0.3764652824517304,37,11,8,0,1,10.088525344463331,0.0,4491,cs,0.0,0,0.0,0,0.0,2.1202055459272096
16,6,easy,0,0,0,0,True,False,66.90000000000002,1.0,0,3745,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""Did correct logical data mapping""}]",834283,0,5,482,0,0,1,51,28,196.2936771993063,3.4397699430837987,11.060640390037369,0.1938221286989252,15,3,2,0,1,5.658553507961585,0.0,4491,cs,0.0,0,0.0,0,0.0,2.1202055459272096
16,0,intermediate,4,0,2,0,True,True,62.0,1.0,FAILED,3743,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""d""},{""question"":""Is your solution exact or approximate?"",""answer"":""D""},{""question"":""How did you estimate the area under the curve?"",""answer"":""d""}]",834281,1,0,28,0,0,0,6,3,25.796414435952386,0.8320208306035269,1.4535611513290576,0.046882219211686,9,2,2,0,0,5.69251916431547,0.8320208306035269,4491,cs,6.25,0,0.0,0,1.0416666666666667,2.1202055459272096
17,14,difficult,0,0,0,0,True,True,66.5,1.0,FAILED,3542,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""because we are accepting only 2 types of coins.""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""reject the request with appropriate message""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""ArrayList\u003cInteger\u003e""}]",822179,0,32,1168,26,8,11,1811,1753,1143.684332577712,20.337388597179267,64.44365046724327,1.1459591819529151,41,11,8,2,3,13.07021514736008,0.0605311880462459,4416,java,0.0,0,0.0,0,0.0,2.373676296296296
17,6,easy,7,0,0,0,True,True,69.69999999999999,1.0,FAILED,3540,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""I am using same variable for both keys and values""}]",822177,0,4,549,2,1,3,20,20,23.79901932217048,0.4427085746803129,1.3410131091018596,0.0249454817495377,20,4,2,1,3,23.79901932217048,0.4427085746803129,4416,java,10.20408163265306,0,0.0,0,1.4577259475218658,2.373676296296296
17,0,intermediate,4,0,2,0,True,True,65.10000000000001,0.95,FAILED,3541,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""According to the mentioned logic i have written the code""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate""},{""question"":""How did you estimate the area under the curve?"",""answer"":""based on the given description""}]",822178,0,0,145,0,0,0,6,5,16.375671648412528,0.3659805232155417,0.922726691112502,0.0206220547436926,13,2,2,0,1,11.804775906372717,0.0,4416,java,12.5,0,25.0,0,6.25,2.373676296296296
19,1,easy,2,0,0,0,True,True,70.0,0.9,FAILED,3736,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""it will work for 2 number""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""""}]",834274,0,9,101,6,0,0,20,11,107.50794896422116,1.172772960749874,6.057794522624304,0.0660827193371239,13,3,2,0,0,7.005095509662413,0.1697312417372628,4544,java,0.0,0,0.0,0,0.0,0.5928833333333333
19,15,intermediate,0,0,0,0,True,True,72.79999999999998,0.95,0,3735,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""please give me""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""ready code""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834273,0,8,153,8,0,0,39,24,223.64862806574055,1.0042261892862758,12.602021033253724,0.0565855452321841,18,0,0,0,0,11.651263195402205,0.0,4544,java,0.0,0,0.0,0,0.0,0.5928833333333333
18,1,easy,0,0,0,0,True,True,67.30000000000001,0.9,0,3748,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""because we tested multiple scenarios with different values and matches it with expected results.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""no""}]",834341,0,3,161,2,0,0,8,6,46.933531571301,1.282486779425255,2.644582965438789,0.072264808905674,12,3,2,0,0,6.620740774556057,0.0,4542,java,0.0,0,0.0,0,0.0,1.5390102091020912
18,15,intermediate,0,0,0,0,True,True,71.5,1.0,0,3746,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Will implemt builder interface to use in pattern matching function""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""""}]",834339,0,4,202,4,0,6,9,7,60.61363550664387,1.453523750778701,3.4154213963350104,0.08190229932581,14,2,2,0,2,6.690104219198768,0.0,4542,java,0.0,0,0.0,0,0.0,1.5390102091020912
20,9,easy,0,0,0,0,True,False,59.4,0.9,0,3820,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""tested""}]",837066,0,0,342,0,0,1,38,21,141.92137625415052,0.9426096873515212,7.996902033744647,0.0531136149096379,20,2,2,0,2,8.036926005087794,0.0,4666,cs,0.0,0,0.0,0,0.0,2.3695880903490765
20,11,intermediate,0,0,0,0,True,False,50.5,0.9333333333333332,0,3821,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""then the starting and end coordinates will get change""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""will use arrays""},{""question"":""Describe in words the algorithm you developed."",""answer"":""Nothing""}]",837067,0,0,151,0,0,0,16,8,60.134023635052536,1.2824570132767743,3.388396509368945,0.0722631316602892,10,2,2,0,1,6.994850489850782,0.0,4666,cs,0.0,0,0.0,0,0.0,2.3695880903490765
20,4,intermediate,0,0,0,0,True,False,53.1,1.0,0,3822,"[{""question"":""Describe any other corner cases you considered."",""answer"":""Nothing""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""null check""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""separating each and storing""}]",837068,2,4,529,0,0,1,96,53,347.9484064751194,2.1623307672843874,19.60599166115905,0.1218417391863435,21,4,2,0,1,6.835150120863713,0.0,4666,cs,0.0,0,0.0,0,0.0,2.3695880903490765
21,14,difficult,0,0,0,0,True,False,71.1,1.0,0,3803,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""na""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""na""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""na""}]",836889,0,20,808,16,2,4,114,66,777.5087913699132,7.068336640259403,43.81060696470356,0.3982824655847372,48,0,0,0,0,12.331845252360392,0.0,4710,java,0.0,0,0.0,0,0.0,1.0307963541666667
21,6,easy,0,0,0,0,True,False,60.7,0.7,0,3804,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""use linkedhashMap""}]",836890,0,7,123,6,2,7,26,14,180.1955240523984,1.9540161603129549,10.15355114782552,0.1101037505329264,13,3,2,1,2,18.37343477387012,0.7161244921468777,4710,java,0.0,0,0.0,0,0.0,1.0307963541666667
21,2,intermediate,0,0,0,0,True,False,60.3,1.0,0,3805,"[{""question"":""the classes you used in the standard library and why"",""answer"":""na""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""na""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""na""}]",836891,0,4,55,4,1,5,13,8,91.42426385845708,1.8047026178674337,5.15152051706461,0.1016903190769776,14,2,2,1,3,4.116386909117035,0.0,4710,java,0.0,0,0.0,0,0.0,1.0307963541666667
22,9,easy,0,0,0,0,True,False,72.0,0.9,0,3609,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""It checks the map and build on the created library map and using builder methods to construct and return the map""}]",832874,0,9,76,6,3,6,14,8,109.0839664385836,0.6403671584423488,6.146599026065536,0.0360830310898365,18,3,2,1,2,19.865808744728085,0.1897076141870244,4630,java,0.0,0,0.0,0,0.0,2.7339069672131147
22,11,intermediate,0,0,0,0,True,False,69.1,1.0,0,3608,"[{""question"":""Describe how the performance of your implementation changes as the distance between the start of the first building and end of the last building increases."",""answer"":""Based on the building increases the alogrithm will divid the lenght and iterate""},{""question"":""Describe how the performance of your implementation changes as the number of buildings increases."",""answer"":""For n""},{""question"":""Describe in words the algorithm you developed."",""answer"":""Divide and conquire algorithm""}]",832873,6,27,476,16,12,19,50,30,372.82355347303866,9.190955719179868,21.007641778059888,0.5178865539687649,21,4,2,2,2,11.49975696850032,0.0532580331462268,4630,java,0.0,0,0.0,0,0.0,2.7339069672131147
22,4,intermediate,0,0,0,0,True,True,67.5,1.0,FAILED,3610,"[{""question"":""Describe any other corner cases you considered."",""answer"":""By second iteration with max length""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""Null check was added at the begining of code, as well try catcj to be call for null pointer exception""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""row and column iteration to be provided and matched according to old array""}]",832875,16,37,683,16,0,8,75,42,420.5625334270761,7.986792853343863,23.69760967408481,0.4500350947670216,20,5,2,0,1,20.40201214945097,1.2038930612848555,4630,java,0.0,0,0.0,0,0.0,2.7339069672131147
23,12,easy,8,0,0,0,True,True,67.30000000000001,1.0,FAILED,3488,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""Need to more analysis""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Need to add more and more test case""}]",812710,1,0,148,0,0,0,29,15,114.98426212409352,0.2682326611058578,6.479065408597315,0.0151142158406982,18,2,2,0,1,6.6595820390616165,0.0,4389,cs,7.8125,0,0.0,0,0.9765625,1.6492755011135856
24,14,difficult,0,0,0,0,True,False,68.8,1.0,0,3437,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""return -1""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""list""}]",809712,0,135,1238,88,11,26,1561,1499,1213.3602971837308,29.551522450671143,68.36971064061129,1.665151763768296,46,0,0,0,0,12.948507468334215,0.0,4161,java,0.0,0,0.0,0,0.0,0.8433025034770514
24,6,easy,7,0,0,0,True,True,69.69999999999999,0.9,FAILED,3435,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""key and value pairs are correct""}]",809710,0,24,211,16,0,2,260,234,396.9070292732797,0.6401560221701971,22.36468327307537,0.0360711341076571,17,3,2,0,0,11.76350967278837,0.0,4161,java,11.224489795918366,0,0.0,0,1.6034985422740526,0.8433025034770514
24,2,intermediate,0,0,0,0,True,False,69.3,0.8666666666666668,0,3436,"[{""question"":""the classes you used in the standard library and why"",""answer"":""""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""not used""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""dayLindayLightTime Method""}]",809711,0,16,522,16,1,19,318,285,556.6585120979908,5.598496077649903,31.36626563940544,0.3154607561661144,14,2,2,1,2,8.369454235101019,0.0387608774941761,4161,java,0.0,0,0.0,0,0.0,0.8433025034770514
25,12,easy,8,0,0,0,True,True,62.0,1.0,FAILED,3588,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""NA""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""I executed few test cases.""}]",832268,0,3,967,2,1,2,24,23,41.68226385592912,0.187456069958857,2.348687628307947,0.0105626641078173,22,3,2,1,2,6.675522097963492,0.0,4585,java,7.8125,0,0.0,0,0.9765625,1.1284309686221008
25,4,intermediate,0,0,0,0,True,True,61.1,0.95,FAILED,3589,"[{""question"":""Describe any other corner cases you considered."",""answer"":""No other cases are considered.""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""did a null check""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""Using array copy""}]",832269,1,3,1047,2,0,0,25,15,78.19396352856147,1.9138674240695293,4.406027354528423,0.1078414732143752,16,3,2,0,1,11.38178970836408,0.0,4585,java,0.0,0,0.0,0,0.0,1.1284309686221008
26,10,easy,6,0,0,0,True,True,74.2,0.9333333333333332,FAILED,3466,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""bna""}]",811948,0,45,299,18,0,0,391,370,418.7541756458867,10.76540275482417,23.595713396020013,0.6066025672550219,28,9,3,0,0,14.092975736179266,0.6230157347079087,4194,java,13.888888888888884,0,0.0,0,2.3148148148148144,1.2032312230215827
27,10,easy,0,0,0,0,True,False,68.40000000000002,1.0,0,3778,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""by testing all possible scenarions and boundry conditions.""}]",834371,0,24,356,12,0,4,42,25,263.1615143226029,3.327743808211009,14.828469851652796,0.187509746100602,24,0,0,0,0,7.014156977473488,0.0,4554,java,0.0,0,0.0,0,0.0,1.8247017488076311
27,2,intermediate,0,0,0,0,True,False,67.80000000000001,1.0,0,3776,"[{""question"":""the classes you used in the standard library and why"",""answer"":""TimeZone,LocalDate""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""stackoverflow""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""For each region Daylight savings is different. Based on Country Region""}]",834369,0,2,45,2,0,2,7,4,46.5859124078363,0.5438738111507471,2.6249955257686644,0.0306458808481619,12,2,2,0,2,16.287977472207256,0.5438738111507471,4554,java,0.0,0,0.0,0,0.0,1.8247017488076311
28,1,easy,0,0,0,0,True,False,67.5,0.8,0,3630,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""Consider the declaration of int or double""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Input value may contains integer and double so shouldbe handle""}]",833023,0,1,245,0,0,0,57,32,202.0994719637121,0.3854182639228697,11.387781890383572,0.0217173210967716,15,3,2,0,0,7.037690703270815,0.0,4478,cs,0.0,0,0.0,0,0.0,2.6569488619119883
28,15,intermediate,0,0,0,0,True,False,69.39999999999999,1.0,0,3629,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""Adding class builder and call method to add and find""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""write code string block to find dot""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""builder interface is blue print and use where ever required""}]",833022,0,17,937,12,0,0,145,77,520.4489964272144,8.357233563181731,29.32595319915686,0.4709084694768276,20,4,3,0,0,6.188511723173757,0.0,4478,cs,0.0,0,0.0,0,0.0,2.6569488619119883
28,3,intermediate,5,0,0,0,True,True,69.69999999999999,0.95,FAILED,3631,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Analyze the existing code and know the funcationality""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""Required to fix""},{""question"":""Describe the faults you found in words."",""answer"":""Test method wrote""}]",833024,2,0,72,0,0,0,20,11,79.79000727060351,0.8742073136021787,4.495960286293581,0.0492593182829655,49,11,7,0,2,7.382503956007429,0.0,4478,cs,4.0,0,0.0,0,0.8,2.6569488619119883
29,14,difficult,14,0,0,0,True,True,65.90000000000002,0.9666666666666665,FAILED,2391,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""it might be possible that machine doesn\u0027t have enough coins available in reserve, so the coins can\u0027t be returned if that was not part of input""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""used hashmap to story coins. a simple array of size 2 can also be used""}]",835359,8,85,4561,32,4,8,133,91,136.92619502527495,11.80523754594241,7.715436506968866,0.6651945649887582,76,23,8,1,2,18.311792073875672,1.5870896710221356,1667,java,5.1020408163265305,0,0.0,0,0.3644314868804665,1.8293992740471867
29,1,easy,2,0,0,0,True,True,75.59999999999998,0.5,ACCEPTABLE,3129,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""For zero size array, I have returned zero. I have divided the number with the total size of array so that the sum doesn\u0027t exceed Double.MAX_VALUE""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""if inputs contains Double.MAX_VALUE, the my variable shouldn\u0027t exceed that value""}]",730006,0,10,286,6,0,0,184,169,204.8303861754716,0.8483222068847784,11.541661834268089,0.0478007595512535,15,4,2,0,0,4.353174191553752,0.1296725164754521,2722,java,37.5,0,0.0,0,18.75,1.8293992740471867
29,10,easy,6,0,0,0,True,True,69.3,0.4,PASSED,2432,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""All the test cases were passed to ensure accurate results. \nThought through all corner cases.""}]",835864,1,4,337,0,0,0,12,12,16.523727085206733,0.9158512920793168,0.9310692315729768,0.051605848629322,28,8,3,0,0,13.26932650119734,0.800917747684865,1701,java,16.666666666666668,0,0.0,0,2.7777777777777786,1.8293992740471867
29,12,easy,0,0,0,0,True,False,62.3,1.0,0,3348,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""for even length list direct middle element doesn\u0027t exist and middle two elements needs to be compared""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""""}]",761084,0,36,892,12,6,6,920,884,554.7802336464405,2.8153192748430813,31.260429512631674,0.1586359506147667,35,7,2,1,1,13.598082532053208,0.5170948827901232,2897,java,0.0,0,0.0,0,0.0,1.8293992740471867
29,9,easy,0,0,0,0,True,False,61.3,0.9,0,3347,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Solution not completed""}]",761083,0,1,422,0,0,0,449,427,312.73134068506647,0.0776457488120891,17.62160120165098,0.0043751368749065,20,0,0,0,0,9.056081488958856,0.0,2897,java,0.0,0,0.0,0,0.0,1.8293992740471867
29,15,intermediate,5,0,0,0,True,True,63.2,1.0,FAILED,2297,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""was not able to test the code""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""""}]",835525,0,29,1209,21,8,8,50,42,148.299335710129,2.8445738420028674,8.35628353278901,0.1602843697168861,43,8,6,2,2,8.828611038255003,0.0393065000174536,1570,0,2.0,0,0.0,0,0.4,1.8768442056074768
29,0,intermediate,4,0,2,0,True,True,70.6,1.0,FAILED,2334,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""using single loop""},{""question"":""Is your solution exact or approximate?"",""answer"":""approximate. could have been improved by taking small iteration of 0.001 width rectangles""}]",835656,116,46,2567,16,0,8,184,96,423.89173313072206,12.720054341410435,23.885201456123,0.7167421224129559,18,4,2,0,1,13.034210037654653,0.644789165189029,1608,java,18.75,0,0.0,0,3.125,1.8768442056074768
29,4,intermediate,5,0,0,0,True,True,70.7,1.0,FAILED,2374,"[{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""Initially i submitted using for loop and did test run, but no result returned. so i simply used clone method to test the run""}]",835554,10,25,1247,10,0,5,52,28,182.1834039517898,3.641617755169391,10.265563032362316,0.2051957302068725,15,3,2,0,1,3.374300345897048,0.0330728547480478,1651,java,12.0,0,0.0,0,2.4,1.8768442056074768
29,2,intermediate,1,0,3,0,True,True,71.2,1.0,PASSED,2340,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Calendar - most commonly used class for Java date time""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""NIST Website\nbegins at 2:00 a.m. on the second Sunday of March - 10:00 AM GST""}]",835392,24,10,3123,4,0,9,77,46,154.32128315343164,2.867439206740164,8.695604676844232,0.1615727738079128,26,4,2,0,2,11.720962297637485,0.10215675535576,1615,java,100.0,0,33.333333333333336,0,33.333333333333336,1.8768442056074768
29,3,intermediate,5,0,0,0,True,True,51.2,1.0,FAILED,2818,"[{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""""},{""question"":""Describe the faults you found in words."",""answer"":""Not sure what needs to be added here""}]",835875,1,60,50,12,6,18,27,14,151.06724400644185,4.832640930132039,8.512247997538593,0.2723068018543142,57,10,2,1,3,15.252387103647552,0.7452808760840668,1967,java,8.0,0,0.0,0,1.6,1.8768442056074768
30,12,easy,8,0,0,0,True,True,63.2,0.2,FAILED,3382,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""tried""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""test""}]",779509,0,0,72,0,0,0,14,9,55.8240340428065,0.0,3.1455397569518286,0.0,8,3,1,0,0,8.172752780740781,0.0,3490,py,1.5625,0,0.0,0,0.1953125,3.905815354330709
30,10,easy,6,0,0,0,True,True,75.9,0.4666666666666666,FAILED,3381,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""tried""}]",779508,0,6,304,0,0,0,53,31,235.0887815212284,2.365558417403395,13.24664405516348,0.1332930909942592,17,9,2,0,0,11.771692869981608,0.1353036604121312,3490,py,8.333333333333334,0,0.0,0,1.3888888888888893,3.905815354330709
30,9,easy,5,0,0,0,True,True,78.1,0.4,FAILED,3380,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""almost""}]",779507,0,1,179,0,0,0,37,20,139.44807302210793,0.363436195919741,7.857537801460364,0.0204786884893388,11,5,1,0,0,12.025732937754537,0.0,3490,py,16.0,0,0.0,0,3.2,3.905815354330709
30,1,easy,2,0,0,0,True,True,61.9,0.1,PASSED,3395,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""testing""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""testing""}]",805755,0,2,60,2,0,0,14,11,36.03241785899162,0.2516867150882959,2.030333437165214,0.0141818946298249,9,2,2,0,0,13.328067614664189,0.2516867150882959,3499,java,50.0,0,0.0,0,25.0,3.905815354330709
30,13,easy,5,0,0,0,True,True,63.4,0.2,PASSED,3597,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""test""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""test""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""test""}]",832859,0,6,647,0,0,1,22,21,55.20893708124788,0.4785980452770717,3.1108806360169416,0.0269677604786509,58,10,4,2,3,7.046867609848459,0.0592062145986751,4591,java,20.0,0,0.0,0,4.0,3.905815354330709
31,12,easy,0,0,0,0,True,False,61.9,1.0,0,3489,"[{""question"":""Why is the median more complex to calculate for even length lists?"",""answer"":""not complex, timeout prior to submission""},{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""by test""}]",813124,0,8,573,2,0,0,73,44,311.712984516154,2.03511743317368,17.56421946865769,0.114673597239583,32,6,2,0,1,9.9245888222858,0.0,4391,cs,0.0,0,0.0,0,0.0,1.6492259171597634
31,3,intermediate,5,0,0,0,True,True,61.7,1.0,FAILED,3491,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""Use Binary Reader and give it a try""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""Byte array length was wrong, corrected that""},{""question"":""Describe the faults you found in words."",""answer"":""Byte array length wrong""}]",813126,1,0,41,0,0,0,8,4,34.24654402312084,0.0,1.9297040711949225,0.0,57,10,2,0,3,8.515667645200367,0.0,4391,cs,8.0,0,0.0,0,1.6,1.6492259171597634
31,15,intermediate,0,0,0,0,True,False,61.9,0.9,0,3490,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""think about more optimum solution""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""using special character hashset algorithm""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""generic and can be used from any where""}]",813125,0,7,943,0,0,2,127,78,489.9338155736943,2.4919591253639566,27.606501779868196,0.1404154435618275,39,7,2,0,2,6.188511723173757,0.0,4391,cs,0.0,0,0.0,0,0.0,1.6492259171597634
32,13,easy,0,0,0,0,True,False,65.40000000000002,0.95,0,3786,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""NA""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""NA""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""NA""}]",836878,0,8,22,8,4,4,7,4,67.13370388472143,0.5826986920030542,3.782810365135811,0.0328335623436662,39,4,4,2,2,21.81619790873524,0.2913493460015271,4740,java,0.0,0,0.0,0,0.0,2.0085975051975047
32,10,easy,6,0,0,0,True,True,66.10000000000001,0.9333333333333332,PASSED,3787,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""By Taking All Boundry Senerios""}]",836879,0,42,336,18,0,0,55,34,297.3059881934203,4.6967654109869885,16.752422534085262,0.2646505682123761,29,8,3,0,0,13.914017851348891,0.5326480289658373,4740,java,16.666666666666668,0,0.0,0,2.7777777777777786,2.0085975051975047
32,2,intermediate,0,0,0,0,True,False,55.00000000000001,1.0,0,3785,"[{""question"":""the classes you used in the standard library and why"",""answer"":""NNA""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""NA""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""NA""}]",836877,0,8,129,8,0,11,29,16,174.2625359978755,2.224698275562873,9.819242634959686,0.1253559867715604,14,2,2,0,3,16.611118937167866,0.5757118607035585,4740,java,0.0,0,0.0,0,0.0,2.0085975051975047
33,1,easy,0,0,0,0,True,False,67.80000000000001,1.0,0,3763,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""using test cases with possible values.""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""yes""}]",834353,0,1,284,0,0,0,73,38,263.64898788858187,2.068305398078872,14.855937724739036,0.1165436531187686,11,3,2,0,0,6.486016615126865,0.0,4594,cs,0.0,0,0.0,0,0.0,1.8516950177935945
33,3,intermediate,0,0,0,0,True,False,69.8,1.0,0,3761,"[{""question"":""Describe what you would do differently if you were to rewrite the decode method from scratch."",""answer"":""I am trying to assign maximum values with maximun negative.""},{""question"":""Describe why the fixes you made constituted \u0027fixing the code in place\u0027."",""answer"":""missing method trying to add""},{""question"":""Describe the faults you found in words."",""answer"":""""}]",834351,2,2,1104,1,0,0,79,39,284.770597145335,4.382179672640529,16.046085710048963,0.2469244765046353,46,9,6,0,2,8.354889643624363,0.0,4594,cs,0.0,0,0.0,0,0.0,1.8516950177935945
33,15,intermediate,0,0,0,0,True,False,69.39999999999999,0.95,0,3762,"[{""question"":""If you had more time, describe what changes you would make (if any) to make your implementation more efficient."",""answer"":""trying to search builder using regex""},{""question"":""Describe how you would extend your pattern language to allow the specification of a literal full stop character (.)."",""answer"":""using regex to specify the pattern with . char""},{""question"":""Describe why a builder interface is appropriate."",""answer"":""we extend when we required""}]",834352,0,9,1454,4,0,0,112,63,291.7452356775592,1.6408558499115156,16.439088529885606,0.0924579779986135,24,3,2,0,0,7.292520577572333,0.0,4594,cs,0.0,0,0.0,0,0.0,1.8516950177935945
34,14,difficult,0,0,0,0,True,False,77.4,1.0,0,3710,"[{""question"":""Justify why the designers of the vending machine did not want to return change unless it was possible from the input coins alone."",""answer"":""""},{""question"":""Describe what your solution does if the button to request coffee is pressed and insufficient funds are available."",""answer"":""""},{""question"":""Describe the data structures you used to track the input of coins."",""answer"":""Map to track the input""}]",834248,0,1,901,0,0,0,125,76,834.4841596981382,6.937341953395535,47.02102142715496,0.3909012542024893,57,0,0,0,0,5.770657467855423,0.0,4624,java,0.0,0,0.0,0,0.0,1.755096
34,6,easy,0,0,0,0,True,False,60.4,0.9,0,3711,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""as curve formula FxDx a and b limit""}]",834249,0,12,169,10,0,2,30,17,195.21575841004463,0.5697481841652429,10.999902457630196,0.0321038347635112,15,3,2,0,0,12.785552793257771,0.0,4624,java,0.0,0,0.0,0,0.0,1.755096
34,0,intermediate,0,0,0,0,True,False,63.2,1.0,0,3712,"[{""question"":""How did you ensure your solution is robust to difficult input?"",""answer"":""area of curve can be didevied into number of rectangular and add the area of rectangular to calculate the area as we have""},{""question"":""Is your solution exact or approximate?"",""answer"":""""},{""question"":""How did you estimate the area under the curve?"",""answer"":""a-\u003eb fx Dx where a and b is limits""}]",834250,14,2,614,2,0,1,24,16,156.37668157678792,2.775397124210341,8.811421055361153,0.1563864408086138,17,0,0,0,0,12.87518626979079,0.0,4624,java,0.0,0,0.0,0,0.0,1.755096
35,10,easy,6,0,0,0,True,True,49.2,0.9333333333333332,FAILED,3547,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""bcz its""}]",822187,0,50,883,21,3,3,447,419,473.81831214241305,15.98934609586562,26.69843489406204,0.9009582466512716,29,9,3,0,0,6.0911711983955525,0.1578391877752949,4399,java,13.888888888888884,0,0.0,0,2.3148148148148144,1.8259034722222216
35,15,intermediate,0,0,0,0,True,False,54.0,1.0,0,3546,0,822186,0,12,299,8,0,0,111,96,224.07777861800773,1.9137317615753715,12.626202555550003,0.1078338289841396,13,2,2,0,0,6.229246851049421,0.0,4399,java,0.0,0,0.0,0,0.0,1.8259034722222216
36,1,easy,0,0,0,0,True,False,70.89999999999998,1.0,0,3607,"[{""question"":""how you ensured your solution produced accurate results"",""answer"":""By Executing the code""},{""question"":""any potentially problematic inputs you considered when writing your implementation"",""answer"":""Time exceeds with basic inputs are tested""}]",832869,0,6,730,6,0,0,134,76,800.1425950104007,1.2836791370359897,45.08596318757348,0.0723319951693215,26,0,0,0,0,12.821033625758366,0.0,4508,java,0.0,0,0.0,0,0.0,0.9117429403202328
36,4,intermediate,0,0,0,0,True,True,70.6,0.95,FAILED,3606,"[{""question"":""Describe any other corner cases you considered."",""answer"":""First made a try with copy is taking place sucessfully or not""},{""question"":""How did you ensure that null values were handled correctly?"",""answer"":""I looped each and every va""},{""question"":""Describe in words how you made a complete copy of the input array."",""answer"":""""}]",832868,0,24,408,14,0,7,65,35,396.9650938300568,3.2759177903634518,22.367955060486363,0.1845894842030297,16,4,2,0,1,9.54053947821383,0.2313843931473918,4508,java,0.0,0,0.0,0,0.0,0.9117429403202328
37,1,easy,2,0,0,0,True,True,60.4,1.0,FAILED,3407,0,806938,0,0,40,0,0,0,24,12,79.55596672108457,0.0,4.482772707397254,0.0,8,2,2,0,0,6.169103101756537,0.0,4114,cs,0.0,0,0.0,0,0.0,2.605677328519856
38,6,easy,0,0,0,0,True,False,69.69999999999999,0.9,0,3568,"[{""question"":""how you ensured your solution produced accurate results?"",""answer"":""we tried to complete the Map question around 80% completion. But unable to complete it fully and execute as the complie test was taking more time""}]",822163,0,6,142,6,0,1,38,21,160.0696616588851,2.476517179897635,9.01951091968304,0.1395453299231078,14,0,0,0,1,10.322721469308654,0.0,4377,cs,0.0,0,0.0,0,0.0,3.67507936
39,10,easy,0,0,0,0,True,False,69.39999999999999,1.0,0,3640,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Input:\nA 2D array graph[V][V] where V is the number of vertices in graph and graph[V][V] is adjacency matrix representation of the graph. A value graph[i][j] is 1 if there is a direct edge from i to j, otherwise graph[i][j] is 0.\n\nOutput:\nAn array path[V] that should contain the Hamiltonian Path. path[i] should represent the ith vertex in the Hamiltonian Path. The code should also return false if there is no Hamiltonian Cycle in the graph.""}]",833274,1,9,550,3,0,0,89,52,537.1675041682804,10.5633975860104,30.267997816285483,0.5952200991029314,31,9,3,0,0,14.414686111220016,0.6189352988924006,4553,java,0.0,0,0.0,0,0.0,2.182711272247857
39,13,easy,0,0,0,0,True,False,67.0,0.9,0,3639,"[{""question"":""briefly describe what a Hamiltonian Cycle is in your own words"",""answer"":""Input:\nA 2D array graph[V][V] where V is the number of vertices in graph and graph[V][V] is adjacency matrix representation of the graph. A value graph[i][j] is 1 if there is a direct edge from i to j, otherwise graph[i][j] is 0.\n\nOutput:\nAn array path[V] that should contain the Hamiltonian Path. path[i] should represent the ith vertex in the Hamiltonian Path. The code should also return false if there is no Hamiltonian Cycle in the graph.""},{""question"":""briefly describe what an edge weight is in your own words"",""answer"":""edge weightsis basically a Direction""},{""question"":""describe how you used the library to find a (near) optimal shortest path through the tourist locations"",""answer"":""org.jgrapht.graph.SimpleWeightedGraph""}]",833273,0,44,5465,28,14,20,174,154,315.430463915214,1.7976207028179707,17.773689806047248,0.1012912715031968,37,4,4,2,2,22.59550820746777,0.3144512491662346,4553,java,0.0,0,0.0,0,0.0,2.182711272247857
39,2,intermediate,1,0,2,0,True,True,71.7,1.0,FAILED,3638,"[{""question"":""the classes you used in the standard library and why"",""answer"":""Used Libraries are to format the Date.""},{""question"":""the URL to the source of information on daylight saving time you used"",""answer"":""www.timeanddate.com""},{""question"":""describe how you found a source of information for determining the daylight saving time rules"",""answer"":""From the URL \""www.timeanddate.com\""""}]",833272,0,6,269,6,3,11,30,17,181.2394401110126,3.5981048546266763,10.212373114413843,0.2027438909418626,15,2,2,1,3,8.715637740184,0.4303616904086459,4553,java,0.0,0,0.0,0,0.0,2.182711272247857
40,10,easy,6,0,0,0,True,True,61.0,0.9333333333333332,FAILED,3706,"[{""question"":""How did you ensure your solution produced accurate results?"",""answer"":""Tested""}]",834244,0,50,353,21,0,0,53,32,314.8861931540286,6.603205839954011,17.743021558092586,0.3720735494855974,27,9,3,0,0,14.092975736179266,0.6230157347079087,4552,java,11.111111111111107,0,0.0,0,1.8518518518518512,1.5156885135135134
